<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
          "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
          "https://checkstyle.org/dtds/configuration_1_3.dtd">
		  
<module name="Checker">
	<module name="TreeWalker">
		<module name="ArrayTypeStyle">
			<message key="array.type.style"
				value="Array brackets are expected to be declared before the identifier name to make the data type more explicit" />
		</module>
		<module name="AbstractClassName"> 
			<message key="illegal.abstract.class.name"
				value="Class name ''{0}'' is expected to start with 'Abstract' as it denotes an abstract class" />
			<message key="no.abstract.class.modifier"
				value="Class ''{0}'' is expected to be declared as abstract as its name starts with ''Abstract''" />
		</module>
		<module name="AvoidInlineConditionals">
			<message key="inline.conditional.avoid"
				value="Inline conditional is hard to understand; please replace it with if-else statements" />
		</module>
		<module name="BooleanExpressionComplexity">
			<message key="booleanExpressionComplexity"
				value="Too many boolean operators! There are {0} operators detected while only {1} operators are expected; please consider breaking down the expression for readability" />
		</module>
		<module name="ConstantName">
			<message key="name.invalidPattern"
				value="Constant name ''{0}'' is expected to not contain lowercased letters" />
		</module>
		<module name="DeclarationOrder">
			<property name="ignoreModifiers" value="true"/>
			<message key="declaration.order.constructor"
				value="Constructors are expected to be declared between declaration of attributes and declaration of other methods" />
			<message key="declaration.order.instance"
				value="Attributes are expected to be declared between declaration of static variables and declaration of methods" />
			<message key="declaration.order.static"
				value="Static variables are expected to be declared at the beginning of class declaration" />
		</module>
		<module name="EmptyBlock">
			<message key="block.empty"
				value="The block is expected to have at least one statement" />
			<message key="block.noStatement"
				value="The block is expected to have at least one statement" />
		</module>
		<module name="EmptyCatchBlock">
			<message key="catch.block.empty"
				value="The catched exception is not handled as the catch block is empty and has no comments" />
		</module>
		<module name="EmptyLineSeparator">
			<property name="allowMultipleEmptyLines" value="false"/>
			<property name="allowNoEmptyLineBetweenFields" value="true"/>
			<message key="empty.line.separator"
					value="For readability, the statement is expected to be separated with its preceeding statement with a blank line" />
			<message key="empty.line.separator.multiple.lines"
					value="Too many empty lines before the statement! For readability, please retain only one of them!" />
			<message key="empty.line.separator.multiple.lines.after"
					value="Too many empty lines after the statement! For readability, please retain only one of them!" />
			<message key="empty.line.separator.multiple.lines.inside"
					value="Too many empty lines inside the statement! For readability, please retain only one of them!" />
		</module>
		<module name="EmptyStatement">
			<message key="empty.statement"
					value="The semicolon ends an empty statement; please either add a statement or remove it!" />
		</module>
		<module name="ExecutableStatementCount">
			<property name="max" value="30"/>
			<message key="executableStatementCount"
					value="Too many program statements in a method! There are {0} statements while only {1} statements are expected for readability; please encapsulate some of the statements as new methods and invoke them instead!" />
		</module>
		<module name="MultipleVariableDeclarations">
			<message key="multiple.variable.declarations"
					value="For readability, each variable declaration is expected to be in its own line" />
			<message key="multiple.variable.declarations.comma"
					value="For readability, each variable declaration is expected to be in its own statement" />
		</module>
		<module name="NeedBraces">
			<message key="needBraces"
					value="''{0}'' construct is expected to be with curly brackets" />
		</module>
		<module name="NestedForDepth">
			<property name="max" value="2"/>
			<message key="nested.for.depth"
					value="The nested loop block is too deep! Please consider refactoring the code for readability!" />
		</module>
		<module name="NestedIfDepth">
			<property name="max" value="2"/>
			<message key="nested.if.depth"
					value="The nested if-else block is too deep! Please consider refactoring the code for readability!" />
		</module>
		<module name="NestedTryDepth">
			<property name="max" value="2"/>
			<message key="nested.try.depth"
					value="The nested try-catch-finally block is too deep! Please consider refactoring the code for readability!" />
		</module>
		<module name="OneStatementPerLine">
			<property name="treatTryResourcesAsStatement" value="true"/>
			<message key="multiple.statements.line"
					value="Each statement is expected to be in its own line" />
		</module>
		<module name="RequireThis">
			<property name="checkMethods" value="false"/>
			<message key="require.this.variable"
					value="Variable ''{0}'' should be referenced with ''this'' as it is an attribute" />
		</module>
		<module name="SimplifyBooleanExpression">
			<message key="simplify.expression"
					value="The boolean expression can be simplified" />
		</module>
		<module name="SimplifyBooleanReturn">
			<message key="simplify.boolReturn"
					value="The conditional logic can be simplified" />
		</module>
		<module name="StringLiteralEquality">
			<message key="string.literal.equality"
					value="Strings should be compared using ''equals'', not ''==''" />
		</module>
		<module name="UnnecessaryParentheses">
			<message key="unnecessary.paren.assign"
					value="Unnecessary parentheses around the right side of the assignment" />
			<message key="unnecessary.paren.expr"
					value="Unnecessary parentheses around the expression" />
			<message key="unnecessary.paren.ident"
					value="Unnecessary parentheses around the identifier" />
			<message key="unnecessary.paren.lambda"
					value="Unnecessary parentheses around the lambda expression" />
			<message key="unnecessary.paren.literal"
					value="Unnecessary parentheses around the literal ''{0}''" />
			<message key="unnecessary.paren.return"
					value="Unnecessary parentheses around the return statement" />
			<message key="unnecessary.paren.string"
					value="Unnecessary parentheses around the literal ''{0}''" />
		</module>
		<module name="UnnecessarySemicolonAfterTypeMemberDeclaration">
			<message key="unnecessary.semicolon"
					value="Unnecessary semicolon" />
		</module>
	</module>
	<module name="LineLength">
		<property name="max" value="120"/>
		<property name="fileExtensions" value="java"/>
		<message key="maxLineLen"
				value="Too many characters in one line! Please consider breaking down the line for readability" />
	</module>
	
</module>